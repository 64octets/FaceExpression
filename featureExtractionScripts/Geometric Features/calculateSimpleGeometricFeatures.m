function [XNeutral, XApex, XDelta] = calculateSimpleGeometricFeatures(landmarkCoord)
% 
% Calculate some simple geometric features in the area of the eyes, nose and
% mouth based on landmark points.

% See the following paper for the details:
%   A Fast and Robust Feature Set for Cross Individual Facial Expression 
%   Recognition, ICCVG 2012
%
% Input
%   landmarkCoord  -  landmark coordinate points
%
% Output
%   XNeutral  -  geometric features of the neutral face
%   XApex     -  geometric features of the apex emotion of the face
%   XDelta    -  difference between the nautral features and the apex
%   features
%
% History
%   created  -  Rodrigo Araujo (sineco@gmail.com), 01-23-2012
%   modified -  Rodrigo Araujo (sineco@gmail.com), 02-32-2013

leftBrow_points = [18 19 20 21 22]; 
rightBrow_points = [23 24 25 26 27];

leftEye_points = [18 19 20 21 22 37 38 39 40 41 42];
rightEye_points = [23 24 25 26 27 43 44 45 46 47 48];

leftLowerLid_points = [37 42 41 40];
rightLowerLid_points = [43 48 47 46];

mouth_points = [49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68];
cornerMouth_points = [49 55];

MIDLE_MOUTH_POINTS = [63 67];
MIDLE_UPPER_LIPS_POINTS = [52 63];
MIDLE_LOWER_LIPS_POINTS = [67 58];
CORNER_MIDLE_UPPER_LIPS = [49 63];
MIDLE_NOSE_UPPER_LIPS_POINTS = [34 52];

NOSE_LEFT_WING_POINTS = [32 33];
NOSE_RIGTH_WING_POINTS = [35 36];

NOSE_ROOT_TIP_POINTS = [28 34];
NOSE_POINTS = [28 29 30 31 32 33 34 35 36];

face_points = 1:68;

XNeutral = [];
XApex = [];
XDelta = [];
%Change landmarkCoord{1} to landmarkCoord
[deltaDistL, distLNeutral, distLApex] = deltaDistEyeBrowCornersLeft(landmarkCoord, landmarkCoord); %Left Eye AU1
[deltaDistR, distRNeutral, distRApex] = deltaDistEyeBrowCornersRight(landmarkCoord, landmarkCoord); %Right Eye AU1
[deltaAreaBoundingBoxL areaBoundingBoxLNeutral, areaBoundingBoxLApex] = deltaAreaBoundingBox(landmarkCoord, landmarkCoord, leftBrow_points);
[deltaAreaBoundingBoxR areaBoundingBoxRNeutral, areaBoundingBoxRApex] = deltaAreaBoundingBox(landmarkCoord, landmarkCoord, rightBrow_points);
[deltaBrowSlopL, alphaLNeutral, alphaLApex] = browSlop(landmarkCoord, landmarkCoord, leftBrow_points);
[deltaBrowSlopR, alphaRNeutral, alphaRApex] = browSlop(landmarkCoord, landmarkCoord, rightBrow_points);
[deltaInnerBrow, innerBrowNeutral, innerBrowApex] = deltaDistInnerBrowCorners(landmarkCoord, landmarkCoord);%AU4
[deltaOuterBrowLeft, outerBrowLeftNeutral, outerBrowLeftApex] = deltaDistEyeBrowOuterLeft(landmarkCoord, landmarkCoord);%AU2
[deltaOuterBrowRight, outerBrowRightNeutral, outerBrowRightApex] = deltaDistEyeBrowOuterRight(landmarkCoord, landmarkCoord);%AU2
[deltaEyeHL, eyeHLNeutral, eyeHLApex]  = deltaEyeHeight(landmarkCoord, landmarkCoord, leftEye_points);
[deltaEyeHR, eyeHRNeutral, eyeHRApex] = deltaEyeHeight(landmarkCoord, landmarkCoord, rightEye_points);
[deltaAreaBoundingBoxLowerLidL areaBoundingBoxLowerLidLNeutral areaBoundingBoxLowerLidLApex] = deltaAreaBoundingBox(landmarkCoord, landmarkCoord, leftLowerLid_points);
[deltaAreaBoundingBoxLowerLidR areaBoundingBoxLowerLidRNeutral areaBoundingBoxLowerLidRApex] = deltaAreaBoundingBox(landmarkCoord, landmarkCoord, rightLowerLid_points);
[deltaAreaBoundingBoxMouth areaBoundingBoxMouthNeutral areaBoundingBoxMouthApex] = deltaAreaBoundingBox(landmarkCoord, landmarkCoord, mouth_points); %AU16
[deltaMouthCorners mouthCornersNeutral mouthCornersApex] = deltaDist2Points(landmarkCoord, landmarkCoord, cornerMouth_points);%AU20
[deltaMouthHeight mouthHeightNeutral mouthHeightApex] = deltaDist2Points(landmarkCoord, landmarkCoord, MIDLE_MOUTH_POINTS);%AU24 AU25, AU26 AU27
[deltaUpperLipHeight upperLipHeightNeutral upperLipHeightApex] = deltaDist2Points(landmarkCoord, landmarkCoord, MIDLE_UPPER_LIPS_POINTS);%AU24
[deltaLowerLipHeight lowerLipHeightNeutral lowerLipHeightApex] = deltaDist2Points(landmarkCoord, landmarkCoord, MIDLE_LOWER_LIPS_POINTS);%AU17
[deltaAnglesCornerMiddleMouth anglesCornerMiddleMouthNeutral anglesCornerMiddleMouthApex] = mouthSlop(landmarkCoord, landmarkCoord, CORNER_MIDLE_UPPER_LIPS);%AU17 %AU12
[deltaLipNoseHeight lipNoseHeightNeutral lipNoseHeightApex] = deltaDist2Points(landmarkCoord, landmarkCoord, MIDLE_NOSE_UPPER_LIPS_POINTS);%AU17
[deltaNoseLeftWingWidth noseLeftWingWidthNeutral noseLeftWingWidthApex] = deltaDist2Points(landmarkCoord, landmarkCoord, NOSE_LEFT_WING_POINTS);%AU09
[deltaNoseRightWingWidth noseRightWingWidthNeutral noseRightWingWidthApex]= deltaDist2Points(landmarkCoord, landmarkCoord, NOSE_RIGTH_WING_POINTS);%AU09
[deltaNoseHeight noseHeightNeutral noseHeightApex] = deltaDist2Points(landmarkCoord, landmarkCoord, NOSE_ROOT_TIP_POINTS);%AU09

XNeutral = [XNeutral; distLNeutral ...
    distRNeutral...
    areaBoundingBoxLNeutral... 
    areaBoundingBoxRNeutral...
    alphaLNeutral...
    alphaRNeutral...
    innerBrowNeutral... 
    outerBrowLeftNeutral ...
    outerBrowRightNeutral...
    eyeHLNeutral...
    eyeHRNeutral...
    areaBoundingBoxLowerLidLNeutral ...
    areaBoundingBoxLowerLidRNeutral...
    areaBoundingBoxMouthNeutral...
    mouthCornersNeutral...
    mouthHeightNeutral ...
    upperLipHeightNeutral...
    lowerLipHeightNeutral...
    anglesCornerMiddleMouthNeutral...
    lipNoseHeightNeutral...
    noseLeftWingWidthNeutral...
    noseRightWingWidthNeutral...
    noseHeightNeutral];

XApex = [XApex; distLApex ...
    distRApex...
    areaBoundingBoxLApex ...
    areaBoundingBoxRApex ...
    alphaLApex...
    alphaRApex ...
    innerBrowApex ...
    outerBrowLeftApex ...
    outerBrowRightApex ...
    eyeHLApex ...
    eyeHRApex ...
    areaBoundingBoxLowerLidLApex ...
    areaBoundingBoxLowerLidRApex ...
    areaBoundingBoxMouthApex ...
    mouthCornersApex ...
    mouthHeightApex  ...
    upperLipHeightApex ...
    lowerLipHeightApex ...
    anglesCornerMiddleMouthApex ...
    lipNoseHeightApex ...
    noseLeftWingWidthApex ...
    noseRightWingWidthApex ...
    noseHeightApex];

XDelta = [XDelta; deltaDistL ...
    deltaDistR ...
    deltaAreaBoundingBoxL ...
    deltaAreaBoundingBoxR ...
    deltaBrowSlopL ...
    deltaBrowSlopR ...
    deltaInnerBrow ...
    deltaOuterBrowLeft ...
    deltaOuterBrowRight ...
    deltaEyeHL ...
    deltaEyeHR ...
    deltaAreaBoundingBoxLowerLidL ...
    deltaAreaBoundingBoxLowerLidR ...
    deltaAreaBoundingBoxMouth ...
    deltaMouthCorners ...
    deltaMouthHeight ...
    deltaUpperLipHeight ...
    deltaLowerLipHeight ...
    deltaAnglesCornerMiddleMouth ...
    deltaLipNoseHeight ...
    deltaNoseLeftWingWidth ...
    deltaNoseRightWingWidth ...
    deltaNoseHeight];

